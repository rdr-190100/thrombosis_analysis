[
  {
    "objectID": "Results.html",
    "href": "Results.html",
    "title": "Thrombosis Diagnosis Analysis Report",
    "section": "",
    "text": "Abstract Autoimmune conditions known as collagen diseases occur when the body’s immune system attacks its own skin, tissues, and organs. One of these conditions is thrombosis, a serious complication and one of the leading killers of people with collagen diseases. Physicians recently learned that anti-cardiolipin antibodies and thrombosis are closely related. The aim of this project is to find other features such as Demographic information and/or common medical tests which can also be taken into consideration while performing diagnosis on Thrombosis."
  },
  {
    "objectID": "Results.html#i.-introduction",
    "href": "Results.html#i.-introduction",
    "title": "Thrombosis Diagnosis Analysis Report",
    "section": "I. INTRODUCTION",
    "text": "I. INTRODUCTION\nCollagen is a fibrous protein found in cartilage and other connective tissue. Collagen diseases are autoimmune diseases in which the immune system of the body attacks its own skin, tissues, and organs. For example, if a patient generates antibodies for lung, they will lose their ability to do respiration and will die. The extent and causes of these diseases are partially known and not well understood and hence their classification can be a challenging task. One of these diseases is Thrombosis, which is an important and severe complication and is also one of the major caused of death in collgen diseases. It was recently discovered by medical physicians that Thrombosis is closely related to anti-cardiolipin antibodies."
  },
  {
    "objectID": "Results.html#ii.-background",
    "href": "Results.html#ii.-background",
    "title": "Thrombosis Diagnosis Analysis Report",
    "section": "II. BACKGROUND",
    "text": "II. BACKGROUND\nCollagen is a powerful thrombotic stimulus that functions by direct and indirect binding to various platelet receptors. A variety of collagen types are known and several (e.g., collagen Types I, III, IV) are found in vascular tissues and are exposed upon disruption of the endothelium or more extensive vessel wall rupture. Some murine models of thrombosis purport to expose collagen to initiate thrombosis, however, the nature and extent of this exposure is not clear (Cooley 2011). Deep vein thrombosis (DVT) and its complication pulmonary embolism (PE), collectively known as venous thromboembolism (VTE), affect more than one per 1000 persons a year in western populations, with a higher risk among the elderly and patients with recent surgery, immobilization, fractures, pregnancy, and cancer (Kyrle and Eichinger 2005). Anticardiolipin antibodies (ACLAs) are strongly associated with thrombosis and appear to be the most common of the acquired blood protein defects causing thrombosis. Although the precise mechanism(s) whereby ACLAs alter hemostasis to induce a hypercoagulable state remain unclear, several theories, have been advanced. The most common thrombotic events associated with ACLAs are deep vein thrombosis and pulmonary embolus (type I syndrome), coronary or peripheral artery thrombosis (type II syndrome), or cerebrovascular/retinal vessel thrombosis (type III syndrome), and occasionally patients present with mixtures (type IV syndrome). The relative frequency of ACLAs in association with arterial and venous thrombosis strongly suggests that these should be looked for in any individual with unexplained thrombosis; all three idiotypes (IgG, IgA, and IgM) should be assessed (Bick and Baker 1992)."
  },
  {
    "objectID": "Results.html#iii.-data-description",
    "href": "Results.html#iii.-data-description",
    "title": "Thrombosis Diagnosis Analysis Report",
    "section": "III. DATA DESCRIPTION",
    "text": "III. DATA DESCRIPTION\nThe Databases used in this project are donated by one of the physicians from a University Hospital where patients visited regarding collagen diseases and/or were recommended by their local physicians, home doctors, other medical specialists. The 3 datasets provided by the University Hospital revolved mainly around the Thrombosis Diagnosis. All the datasets had ID of the patient which was the joining parameter used to perform analytical joins. These datasets roughly covered the demographic aspect of each patient, the medical test history of each patient and the factors for thrombosis diagnosis of some patients. The datasets were provided in the form of CSV files and were cleaned and processed using Python. The datasets were cleaned by removing the missing values, the unwanted columns and the unwanted rows."
  },
  {
    "objectID": "Results.html#iv.-exploratory-data-analysis",
    "href": "Results.html#iv.-exploratory-data-analysis",
    "title": "Thrombosis Diagnosis Analysis Report",
    "section": "IV. EXPLORATORY DATA ANALYSIS",
    "text": "IV. EXPLORATORY DATA ANALYSIS\nThere are a variety of columns present in the Dataset. The features fall into the Demographic category which gives information such as Age group and Gender or under the Thrombosis category which tells about the Thrombosis specific tests performed on the patient such as Antinucleus Antibody (ANA) and Anticardiolipin antibodies (ACLAs) or finally under the Common Medical tests category which gives us all the common Medical tests of the patient in a certain time period such as Urine tests, Blood Count and Chemistry Tests. To better understand these columns and their relation to the Thrombosis, some visual analysis is performed.\n\nA. DEMOGRAPHIC ANALYSIS\n\n\n\n\n\n\n\n(a) Gender Distribution\n\n\n\n\n\n\n\n(b) Age Distribution\n\n\n\n\nFigure 1: Demographic Analysis\n\n\nThe Demographics such as Age and Gender of a patient can be very useful while predicting any kind of disease. Females are more likely to test positive for Thrombosis as compared to Males. But these reports are from just one hospital and this observation cannot be generalized for the entire world. To make that generalization we would need more information about other Demographics of the area where the University is located and to what extent have those factors affected the patients (see Figure 1 (a)). Additionally, there are more Mild Thrombosis patients in all age groups than other Degrees of Thrombosis, but patients aged 19 to 45 have the highest chance of being diagnosed with Mild Thrombosis. This pattern shifts for Severe Thrombosis, where patients who are not yet adults (0-18 years) are more likely to be diagnosed. Finally, patients between the ages of 31 and 60 are diagnosed with Extremely Severe Thrombosis. This data suggests that people aged 61 and up are the least likely to be diagnosed with Thrombosis (see Figure 1 (b)).\n\n\nB. FEATURE ANALYSIS\n\nPreliminary Analysis to check for Relation between Medical Tests and Thrombosis Diagnosis\n\n\n\nFigure 2: Correlation Plot\n\n\nA Correlation Plot is used to find the relation between any two variables. For this analysis, we are focused on the relation between Medical tests and Diagnosis of Thrombosis. The plot (see Figure 2) shows that there is a correlation between the Thrombosis Diagnosis and some of the Thrombosis Medical tests such as Antinucleus Antibody (ANA) and Anticardiolipin Antibodies (ACL_IGG). This correlation is also observed in the Common Medical tests such as U-Pro (Proteinuria), GPT (ALT glutamic pylvic transaminase), GOT (AST glutamic oxaloacetic transaminase), C3 (Complement 3), C4 (Complement 4), HCT (Hematoclit), PLT (Platelet Count) and HGB (Hemoglobin). Since correlation coefficients cannot be used alone to determine whether these tests are relevant for diagnosing thrombosis, Visual analysis is used to determine whether there are any significant patterns in these tests to look for when diagnosing thrombosis.\n\n\nDeeper Visual Analysis to detect some patterns in the Medical Tests\nSince Anti-Cardiolipin Antibody (IgG) is the correlated feature to Thrombosis (see Figure 2 and Section 4.2.1), it was compared with other medical tests that were correlated to Thrombosis (see Figure 2 and Section 4.2.1) to see if there are any significant patterns while diagnosing Thrombosis.\n\n\n\n\n\n\n\n(a) IgG v/s GPT\n\n\n\n\n\n\n\n\n\n(b) IgG v/s GOT\n\n\n\n\nFigure 3: Comparison of Anti-Cardiolipin Antibody (IgG) with ALT glutamic pylvic transaminase (GPT) and AST glutamic oxaloacetic transaminase (GOT)\n\n\nThe normal range for GPT and GOT is less than 60. It can be seen that many patients with Thrombosis had GPTs of 60 or higher, with only a few exceptions where patients with GPTs and GOTs outside the normal range were also diagnosed with Thrombosis (see Figure 3). Further investigation into Degrees of Thrombosis reveals that, with the exception of a few patients, the majority of patients diagnosed with thrombosis have normal GPT. Focusing on the patient with a GPT of 300 or higher, the patient has a severe case of thrombosis, which is intriguing (see Figure 3 (a)). Concentrating on the patients who have GOT of 100+, the patients have a severe case of thrombosis which is also interesting (see Figure 3 (b)). Hence it can be inferred that GPT and GOT are not good tests to use when diagnosing Mild Thrombosis, but more research into abnormally high GPT/GOT and Thrombosis Severity can be done with a larger volume of data.\n\n\n\n\n\n\n\n(a) IgG v/s C3\n\n\n\n\n\n\n\n\n\n(b) IgG v/s C4\n\n\n\n\nFigure 4: Comparison of Anti-Cardiolipin Antibody (IgG) with Complement 3 (C3) and Complement 4 (C4)\n\n\nC3 has a normal range of more than 35 while C4 has a normal range of greater than 10. Many patients who were diagnosed with Thrombosis had their C3 less than 35 along, implying that patients with an abnormal C3 are more prone to Thrombosis. It can also be observed that almost all patients who were diagnosed with Thrombosis had their C4 less than 18 which implies that the patients who have an abnormal C4 (from 0 to 15) are more prone to Thrombosis. This demonstrates that C3 and C4 are good tests to consider when diagnosing Thrombosis (see Figure 4).\n\n\n\n\n\n\n\n(a) IgG v/s HGB\n\n\n\n\n\n\n\n\n\n(b) IgG v/s HCT\n\n\n\n\nFigure 5: Comparison of Anti-Cardiolipin Antibody (IgG) with Hemoglobin (HGB) and Hematoclit (HCT)\n\n\nHGB has a normal range between 10 and 17 while HCT has a normal range between 29 and 52. It can be observed that all patients who were diagnosed with Thrombosis had their HGB and HCT inside their normal ranges. This shows that HGB and HCT are not good tests to be taken into consideration while diagnosing Thrombosis (see Figure 5).\n\n\n\n\n\n\n\n(a) IgG v/s PLT\n\n\n\n\n\n\n\n\n\n(b) IgG v/s U-PRO\n\n\n\n\nFigure 6: Comparison of Anti-Cardiolipin Antibody (IgG) with Platelet Count (PLT) and Proteinuria (U-PRO)\n\n\nPLT has a normal range between 100 and 400. It can be observed that more than 95% of the patients who were diagnosed with Thrombosis had their PLT between 100 and 400. This shows that PLT is not a good test to be taken into consideration while diagnosing Thrombosis (see Figure 6 (a)). On the other hand, U-PRO has a normal range between 0 and 30. It can be observed that many patients who were diagnosed with Thrombosis had their U-PRO between 0 and 30 and there were only a few exceptions where patients with U-PRO outside the normal range were also diagnosed with Thrombosis. Delving further into Degrees of Thrombosis, it can be observed that most of the patients who are diagnosed with thrombosis have normal U-PRO except a few patients. Concentrating on the patients who have U-PRO of 100+, the patients have a severe case of thrombosis which is interesting. This shows that U-PRO is not a good test to be taken into consideration while diagnosing Mild Thrombosis but further research with regards to abnormally high U-PRO and Severeness of Thrombosis can be performed with a larger volume of data (see Figure 6 (b))."
  },
  {
    "objectID": "Results.html#insights",
    "href": "Results.html#insights",
    "title": "Thrombosis Diagnosis Analysis Report",
    "section": "INSIGHTS",
    "text": "INSIGHTS\nSince the data is from a specific University hospital (without any addition knowledge about the area), required a lot of assumptions while imputing the missing values and the analysis performed was only preliminary, the inferences drawn from the analysis are not conclusive. However, the analysis performed can be used as a starting point for further research into the diagnosis of Thrombosis. The analysis performed can be used to determine which tests are good to be taken into consideration while diagnosing Thrombosis and which tests are not good to be taken into consideration while diagnosing Thrombosis. Tests like C3 and C4 had significant patterns while tests like HGB, HCT and Platelet count did not show any significant patterns while diagnosing Thrombosis. Some tests like U-PRO, GOT and GPT had few patterns that might be good to look at while diagnosing extreme severe cases of Thrombosis. Demographic information such as Age groups and Gender proved to be relevant while analysing the Diagnosis and Degrees of Thrombosis and can be combined with other Quantitative variables (Medical Tests). For further research, Statistical tests and Machine Learning algorithms can be used to determine the significance of the patterns observed in the analysis performed."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "EDA on Medical Data of Thrombosis Diagnosis",
    "section": "",
    "text": "Collagen is a fibrous protein found in cartilage and other connective tissue. Collagen diseases are autoimmune diseases in which the immune system of the body attacks its own skin, tissues, and organs. For example, if a patient generates antibodies for lung, they will lose their ability to do respiration and will die. The extent and causes of these diseases are partially known and not well understood and hence their classification can be a challenging task. One of these diseases is Thrombosis, which is an important and severe complication and is also one of the major causes of death in collagen diseases. It was recently discovered by medical physicians that Thrombosis is closely related to anti-cardiolipin antibodies. The Databases used in this project are donated by one of these physicians from a University Hospital where patients came regarding collagen diseases and were recommended by their local physicians, home doctors, and other medical specialists."
  },
  {
    "objectID": "index.html#import-libraries",
    "href": "index.html#import-libraries",
    "title": "EDA on Medical Data of Thrombosis Diagnosis",
    "section": "Import Libraries",
    "text": "Import Libraries\n\n\nCode\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nimport datetime\nimport snakecase\nimport re\n\nwarnings.filterwarnings(\"ignore\")\npd.set_option(\"display.max_columns\", None)"
  },
  {
    "objectID": "index.html#import-data",
    "href": "index.html#import-data",
    "title": "EDA on Medical Data of Thrombosis Diagnosis",
    "section": "Import Data",
    "text": "Import Data\n\n\nCode\na = pd.read_csv(\"data/TSUMOTO_A.CSV\")\nb = pd.read_csv(\"data/TSUMOTO_B.CSV\")\nc = pd.read_csv(\"data/TSUMOTO_C.CSV\")\n\n\n\nData Sample\nTsumoto_A - Basic Information about Patients (Input by Experts). This dataset includes all patients\n\n\nCode\na.head()\n\n\n\n\n\n\n  \n    \n      \n      ID\n      SEX\n      Birthday\n      Description\n      First Date\n      Admission\n      Diagnosis\n    \n  \n  \n    \n      0\n      2110\n      F\n      2/13/34\n      94.02.14\n      93.02.10\n      +\n      RA susp.\n    \n    \n      1\n      11408\n      F\n      5/2/37\n      96.12.01\n      73.01.01\n      +\n      PSS\n    \n    \n      2\n      12052\n      F\n      4/14/56\n      91.08.13\n      NaN\n      +\n      SLE\n    \n    \n      3\n      14872\n      F\n      9/21/53\n      97.08.13\n      NaN\n      +\n      MCTD\n    \n    \n      4\n      27654\n      F\n      3/25/36\n      NaN\n      92.02.03\n      +\n      RA, SLE susp\n    \n  \n\n\n\n\nTsumoto_B - Special Laboratory Examinations (Input by Experts) (Measured by the Laboratory on Collagen Diseases)This dataset does not include all the patients, but includes the patients with these special tests\n\n\nCode\nb.head()\n\n\n\n\n\n\n  \n    \n      \n      ID\n      Examination Date\n      aCL IgG\n      aCL IgM\n      ANA\n      ANA Pattern\n      aCL IgA\n      Diagnosis\n      KCT\n      RVVT\n      LAC\n      Symptoms\n      Thrombosis\n    \n  \n  \n    \n      0\n      14872.0\n      5/27/97\n      1.3\n      1.6\n      256\n      P\n      0.0\n      MCTD, AMI\n      NaN\n      NaN\n      -\n      AMI\n      1\n    \n    \n      1\n      48473.0\n      12/21/92\n      4.3\n      4.6\n      256\n      P,S\n      3.3\n      SLE\n      -\n      -\n      -\n      NaN\n      0\n    \n    \n      2\n      102490.0\n      4/20/95\n      2.3\n      2.5\n      0\n      NaN\n      3.5\n      PSS\n      NaN\n      NaN\n      NaN\n      NaN\n      0\n    \n    \n      3\n      108788.0\n      5/6/97\n      0.0\n      0.0\n      16\n      S\n      0.0\n      NaN\n      NaN\n      NaN\n      -\n      NaN\n      0\n    \n    \n      4\n      122405.0\n      4/2/98\n      0.0\n      4.0\n      4\n      P\n      0.0\n      SLE, SjS, vertigo\n      NaN\n      NaN\n      NaN\n      NaN\n      0\n    \n  \n\n\n\n\nTsumoto_C - Laboratory Examinations stored in Hospital Information Systems (Stored from 1980 to 1999.3) All the data includes ordinary laboratory examinations and have temporal stamps\n\n\nCode\nc.head()\n\n\n\n\n\n\n  \n    \n      \n      ID\n      Date\n      GOT\n      GPT\n      LDH\n      ALP\n      TP\n      ALB\n      UA\n      UN\n      CRE\n      T-BIL\n      T-CHO\n      TG\n      CPK\n      GLU\n      WBC\n      RBC\n      HGB\n      HCT\n      PLT\n      PT\n      APTT\n      FG\n      PIC\n      TAT\n      TAT2\n      U-PRO\n      IGG\n      IGA\n      IGM\n      CRP\n      RA\n      RF\n      C3\n      C4\n      RNP\n      SM\n      SC170\n      SSA\n      SSB\n      CENTROMEA\n      DNA\n      DNA-II\n      Unnamed: 44\n      Unnamed: 45\n    \n  \n  \n    \n      0\n      2110\n      860419\n      24\n      12\n      152\n      63\n      7.5\n      4.5\n      3.4\n      16.0\n      0.6\n      0.4\n      192\n      NaN\n      NaN\n      NaN\n      5.9\n      4.69\n      9\n      31.6\n      380\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      0\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n    \n    \n      1\n      2110\n      860430\n      25\n      12\n      162\n      76\n      7.9\n      4.6\n      4.7\n      18.0\n      0.6\n      0.4\n      187\n      76\n      31\n      NaN\n      6.9\n      4.73\n      9.3\n      31.8\n      323\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      <0.002\n      -\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n    \n    \n      2\n      2110\n      860502\n      22\n      8\n      144\n      68\n      7\n      4.2\n      5\n      18.0\n      0.6\n      0.4\n      191\n      NaN\n      23\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      -\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n    \n    \n      3\n      2110\n      860506\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      0\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n    \n    \n      4\n      2110\n      860507\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      0\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN"
  },
  {
    "objectID": "index.html#data-cleaning",
    "href": "index.html#data-cleaning",
    "title": "EDA on Medical Data of Thrombosis Diagnosis",
    "section": "Data Cleaning",
    "text": "Data Cleaning\n\nTsumoto_A and Tsumoto_B Merge\nMerge B with A on ID:\n\n\nCode\nb_new = b.dropna(subset=[\"ID\"])  # DROP ROWS WITH NA IN ID COLUMN\nmerge_df = pd.merge(\n    b_new, a[[\"ID\", \"SEX\", \"Birthday\", \"Diagnosis\"]], on=\"ID\", how=\"left\"\n)\nmerge_df.head()\n\n\n\n\n\n\n  \n    \n      \n      ID\n      Examination Date\n      aCL IgG\n      aCL IgM\n      ANA\n      ANA Pattern\n      aCL IgA\n      Diagnosis_x\n      KCT\n      RVVT\n      LAC\n      Symptoms\n      Thrombosis\n      SEX\n      Birthday\n      Diagnosis_y\n    \n  \n  \n    \n      0\n      14872.0\n      5/27/97\n      1.3\n      1.6\n      256\n      P\n      0.0\n      MCTD, AMI\n      NaN\n      NaN\n      -\n      AMI\n      1\n      F\n      9/21/53\n      MCTD\n    \n    \n      1\n      48473.0\n      12/21/92\n      4.3\n      4.6\n      256\n      P,S\n      3.3\n      SLE\n      -\n      -\n      -\n      NaN\n      0\n      F\n      10/7/48\n      SLE\n    \n    \n      2\n      102490.0\n      4/20/95\n      2.3\n      2.5\n      0\n      NaN\n      3.5\n      PSS\n      NaN\n      NaN\n      NaN\n      NaN\n      0\n      F\n      4/1/82\n      PSS\n    \n    \n      3\n      108788.0\n      5/6/97\n      0.0\n      0.0\n      16\n      S\n      0.0\n      NaN\n      NaN\n      NaN\n      -\n      NaN\n      0\n      F\n      3/15/42\n      SJS\n    \n    \n      4\n      122405.0\n      4/2/98\n      0.0\n      4.0\n      4\n      P\n      0.0\n      SLE, SjS, vertigo\n      NaN\n      NaN\n      NaN\n      NaN\n      0\n      F\n      5/22/61\n      SJS\n    \n  \n\n\n\n\n\nMissing Values\n\n\nCode\nprint(\"The number of rows and columns in the new merged dataframe are:\", merge_df.shape)\nprint(\"--------------------------------------------------------------------------\")\nprint(\n    \"The number of missing values in the new merged dataframe are: \\n\",\n    merge_df.isna().sum(),\n)\n\n\nThe number of rows and columns in the new merged dataframe are: (770, 16)\n--------------------------------------------------------------------------\nThe number of missing values in the new merged dataframe are: \n ID                    0\nExamination Date      7\naCL IgG               0\naCL IgM               0\nANA                  20\nANA Pattern         236\naCL IgA               0\nDiagnosis_x         312\nKCT                 625\nRVVT                625\nLAC                 549\nSymptoms            695\nThrombosis            0\nSEX                 354\nBirthday            353\nDiagnosis_y         353\ndtype: int64\n\n\nHandling missing values in the merged dataset:\n\n\nCode\n# MERGING THE 2 DIAGNOSIS COLUMNS INTO 1\n# CREATING LISTS OF DIAGNOSIS FOR EACH ROW\nfor i in range(len(merge_df)):\n    if merge_df[\"Diagnosis_x\"].isna()[i] == False:\n        merge_df[\"Diagnosis_x\"][i] = merge_df[\"Diagnosis_x\"][i].split(\",\")\n    if merge_df[\"Diagnosis_y\"].isna()[i] == False:\n        merge_df[\"Diagnosis_y\"][i] = merge_df[\"Diagnosis_y\"][i].split(\",\")\n\n# CREATING A NEW COLUMN CALLED DIAGNOSIS AND FILLING IT WITH THE APPROPRIATE DIAGNOSIS\nmerge_df[\"Diagnosis\"] = \"\"\nfor i in range(len(merge_df)):\n    if (merge_df[\"Diagnosis_x\"].isna()[i] == False) & (\n        merge_df[\"Diagnosis_y\"].isna()[i] == True\n    ):\n        merge_df[\"Diagnosis\"][i] = merge_df[\"Diagnosis_x\"][i]\n    elif (merge_df[\"Diagnosis_x\"].isna()[i] == True) & (\n        merge_df[\"Diagnosis_y\"].isna()[i] == False\n    ):\n        merge_df[\"Diagnosis\"][i] = merge_df[\"Diagnosis_y\"][i]\n    elif (merge_df[\"Diagnosis_x\"].isna()[i] == False) & (\n        merge_df[\"Diagnosis_y\"].isna()[i] == False\n    ):\n        merge_df[\"Diagnosis\"][i] = list(\n            set(merge_df[\"Diagnosis_x\"][i] + merge_df[\"Diagnosis_y\"][i])\n        )\n\n# REMOVING THE DUPLICATES IN THE DIAGNOSIS COLUMN\nfor i in range(len(merge_df)):\n    for j in range(len(merge_df[\"Diagnosis\"][i])):\n        merge_df[\"Diagnosis\"][i][j] = merge_df[\"Diagnosis\"][i][j].strip()\n        merge_df[\"Diagnosis\"][i][j] = merge_df[\"Diagnosis\"][i][j].lower()\n    merge_df[\"Diagnosis\"][i] = list(set(merge_df[\"Diagnosis\"][i]))\n\n    if merge_df[\"Diagnosis\"][i] == []:\n        merge_df[\"Diagnosis\"][i] = \"No Diagnosis\"\n    else:\n        pass\n\n# DROPPING THE ORIGINAL DIAGNOSIS COLUMNS\nmerge_df.drop([\"Diagnosis_x\", \"Diagnosis_y\"], axis=1, inplace=True)\n\n# FILLING NAN VALUES IN THE BIRTHDAY COLUMN WITH A DATE OF 0/0/0\nmerge_df[\"Birthday\"].fillna(\"0/0/0\", inplace=True)\n# DROPPING ROWS WITH NAN VALUES IN THE EXAMINATION DATE COLUMN\nmerge_df.dropna(subset=[\"Examination Date\"], inplace=True)\nmerge_df.reset_index(drop=True, inplace=True)\n\n# CREATING A NEW COLUMN CALLED AGE AND FILLING IT WITH THE DIFFERENCE BETWEEN THE EXAMINATION DATE AND BIRTHDAY\nmerge_df[\"Age\"] = 0\nfor i in range(len(merge_df)):\n    if merge_df[\"Birthday\"][i] == \"0/0/0\":\n        merge_df[\"Age\"][i] = \"Not Available\"\n    elif merge_df[\"Birthday\"][i] != \"0/0/0\":\n        merge_df[\"Age\"][i] = int(merge_df[\"Examination Date\"][i].split(\"/\")[2]) - int(\n            merge_df[\"Birthday\"][i].split(\"/\")[2]\n        )\n    else:\n        merge_df[\"Age\"][i] = \"Not Available\"\n\n# DROPPING THE KCT, RVVT, AND LAC COLUMNS SINCE THEY HAVE MORE THAN 70% MISSING VALUES\nmerge_df.drop([\"KCT\", \"RVVT\", \"LAC\"], axis=1, inplace=True)\n# FILLING MISSING VALUES IN THE SYMPTOMS COLUMN WITH \"None\"\nmerge_df[\"Symptoms\"].fillna(\"None\", inplace=True)\nmerge_df.reset_index(drop=True, inplace=True)\n# FILLING MISSING VALUES IN THE ANA COLUMN WITH \"0\"\nmerge_df[\"ANA\"].fillna(\"0\", inplace=True)\n\n# FILLING THE VALUES IN THE ANA PATTERN COLUMN WITH \"None\" IF THE ANA COLUMN IS \"0\"\nfor i in range(len(merge_df)):\n    if merge_df[\"ANA\"][i] == \"0\":\n        merge_df[\"ANA Pattern\"][i] = \"None\"\n    else:\n        pass\n\n# FILLING MISSING VALUES IN THE ANA PATTERN COLUMN WITH \"Not Available\"\nmerge_df[\"ANA Pattern\"].fillna(\"Not Available\", inplace=True)\n# FILLING MISSING VALUES IN THE SEX COLUMN WITH \"Not Available\"\nmerge_df[\"SEX\"].fillna(\"Not Available\", inplace=True)\n# DROPPING ROWS WITH MISSING VALUES IN THE ENTIRE DATAFRAME\nmerge_df.dropna(inplace=True)\nmerge_df.reset_index(drop=True, inplace=True)\n\nprint(\n    \"The number of missing values in the new merged dataframe are: \\n\",\n    merge_df.isna().sum(),\n)\n\n\nThe number of missing values in the new merged dataframe are: \n ID                  0\nExamination Date    0\naCL IgG             0\naCL IgM             0\nANA                 0\nANA Pattern         0\naCL IgA             0\nSymptoms            0\nThrombosis          0\nSEX                 0\nBirthday            0\nDiagnosis           0\nAge                 0\ndtype: int64\n\n\nFinal dataframe sample after handling missing values:\n\n\nCode\nmerge_df.head()\n\n\n\n\n\n\n  \n    \n      \n      ID\n      Examination Date\n      aCL IgG\n      aCL IgM\n      ANA\n      ANA Pattern\n      aCL IgA\n      Symptoms\n      Thrombosis\n      SEX\n      Birthday\n      Diagnosis\n      Age\n    \n  \n  \n    \n      0\n      14872.0\n      5/27/97\n      1.3\n      1.6\n      256\n      P\n      0.0\n      AMI\n      1\n      F\n      9/21/53\n      [mctd, ami]\n      44\n    \n    \n      1\n      48473.0\n      12/21/92\n      4.3\n      4.6\n      256\n      P,S\n      3.3\n      None\n      0\n      F\n      10/7/48\n      [sle]\n      44\n    \n    \n      2\n      102490.0\n      4/20/95\n      2.3\n      2.5\n      0\n      None\n      3.5\n      None\n      0\n      F\n      4/1/82\n      [pss]\n      13\n    \n    \n      3\n      108788.0\n      5/6/97\n      0.0\n      0.0\n      16\n      S\n      0.0\n      None\n      0\n      F\n      3/15/42\n      [sjs]\n      55\n    \n    \n      4\n      122405.0\n      4/2/98\n      0.0\n      4.0\n      4\n      P\n      0.0\n      None\n      0\n      F\n      5/22/61\n      [vertigo, sjs, sle]\n      37\n    \n  \n\n\n\n\nConverting the Examination Date and Date of the Test to Date Time Format:\n\n\nCode\nc[\"Date\"] = pd.to_datetime(c[\"Date\"], format=\"%y%m%d\")\nmerge_df[\"Examination Date\"] = pd.to_datetime(merge_df[\"Examination Date\"], format=\"%x\")\n\n\n\n\n\nTsumoto_C Merge\nMerging the Dataframe of Thrombosis examination (A) and Demographic information of the Patient (B) with the Hospital Records of every Patient (C):\n\n\nCode\ndf = pd.merge(merge_df[[\"ID\", \"Examination Date\"]], c, on=[\"ID\"], how=\"left\")\ndf.head()\n\n\n\n\n\n\n  \n    \n      \n      ID\n      Examination Date\n      Date\n      GOT\n      GPT\n      LDH\n      ALP\n      TP\n      ALB\n      UA\n      UN\n      CRE\n      T-BIL\n      T-CHO\n      TG\n      CPK\n      GLU\n      WBC\n      RBC\n      HGB\n      HCT\n      PLT\n      PT\n      APTT\n      FG\n      PIC\n      TAT\n      TAT2\n      U-PRO\n      IGG\n      IGA\n      IGM\n      CRP\n      RA\n      RF\n      C3\n      C4\n      RNP\n      SM\n      SC170\n      SSA\n      SSB\n      CENTROMEA\n      DNA\n      DNA-II\n      Unnamed: 44\n      Unnamed: 45\n    \n  \n  \n    \n      0\n      14872.0\n      1997-05-27\n      1981-02-17\n      22\n      30\n      179\n      41\n      6.6\n      4.1\n      3.5\n      13.0\n      0.9\n      0.3\n      193\n      79\n      NaN\n      NaN\n      10\n      4.44\n      12.5\n      38.2\n      256\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      0\n      NaN\n      NaN\n      NaN\n      -\n      -\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n    \n    \n      1\n      14872.0\n      1997-05-27\n      1981-03-16\n      22\n      19\n      155\n      37\n      7.2\n      4.5\n      3.2\n      12.0\n      0.8\n      0.3\n      185\n      NaN\n      13\n      NaN\n      7.2\n      4.5\n      11.8\n      37.7\n      199\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      -\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n    \n    \n      2\n      14872.0\n      1997-05-27\n      1981-04-06\n      21\n      20\n      143\n      42\n      7.5\n      4.7\n      4.1\n      12.0\n      0.8\n      0.3\n      199\n      NaN\n      11\n      NaN\n      5.6\n      4.76\n      12.8\n      39.4\n      199\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      -\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n    \n    \n      3\n      14872.0\n      1997-05-27\n      1981-04-27\n      32\n      20\n      218\n      43\n      7.2\n      4.5\n      3.5\n      9.0\n      0.9\n      0.3\n      185\n      NaN\n      22\n      NaN\n      3.3\n      4.76\n      12.3\n      39.4\n      183\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      -\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n    \n    \n      4\n      14872.0\n      1997-05-27\n      1981-05-01\n      33\n      19\n      277\n      38\n      6.9\n      4.4\n      3.3\n      11.0\n      0.8\n      0.3\n      184\n      NaN\n      17\n      NaN\n      5.8\n      4.43\n      11.7\n      36\n      215\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      -\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n    \n  \n\n\n\n\n\nMissing Values\nDropping Rows and Columns according to Missing Values in the Merged Dataset:\n\n\nCode\n# DROPPING UNNCESSARY COLUMNS CREATED WHILE IMPORTING THE DATA\ndf.drop([\"Unnamed: 44\", \"Unnamed: 45\", \"CRP\"], axis=1, inplace=True)\n# DROPPING THE COLUMNS AND ROWS WITH MORE THAN 70% MISSING VALUES\ndf.dropna(thresh=len(df) * 0.3, axis=1, inplace=True)\ndf.dropna(thresh=len(df.columns) * 0.3, inplace=True)\ndf.reset_index(inplace=True)\n\n\nFeature Extraction - Tagging the hospital records of Patient on the basis of the Thrombosis Examination:\n\n\nCode\ndf[\"B/A_Tag\"] = \"\"\nfor i in range(len(df)):\n    if (df[\"Examination Date\"][i] - df[\"Date\"][i]).days >= 0:\n        df[\"B/A_Tag\"][i] = \"Before\"\n    else:\n        df[\"B/A_Tag\"][i] = \"After\"\n\n\nConverting all the values in the dataframe to float (from string):\n\n\nCode\ncol_conv = [\n    \"GOT\",\n    \"GPT\",\n    \"LDH\",\n    \"ALP\",\n    \"TP\",\n    \"ALB\",\n    \"UA\",\n    \"UN\",\n    \"CRE\",\n    \"T-BIL\",\n    \"T-CHO\",\n    \"TG\",\n    \"WBC\",\n    \"RBC\",\n    \"HGB\",\n    \"HCT\",\n    \"PLT\",\n    \"U-PRO\",\n    \"C3\",\n    \"C4\",\n]\nfor col in col_conv:\n    if df[col].dtype == \"object\":\n        for i in range(len(df)):\n            if df[col].isna()[i] == False:\n                if type(df[col][i]) == str:\n                    df[col][i] = re.sub(r\"[^\\d.]\", \"\", df[col][i])\n                    if df[col][i] == \"\":\n                        df[col][i] = 0\n                    else:\n                        df[col][i] = float(df[col][i])\n                else:\n                    pass\n            else:\n                pass\n    else:\n        pass\n\n# CREATING A COPY OF THE DATAFRAME TO AVOID CHANGING THE ORIGINAL DATAFRAME\ndf1 = df.copy()\n# FILLING MISSING VALUES IN THE COLUMNS WITH 0\ndf1.fillna(0, inplace=True)\n\n# CONVERTING THE COLUMNS TO FLOAT\nfor col in col_conv:\n    df[col] = pd.to_numeric(df[col], errors=\"coerce\").astype(float)\n\n# CREATING A NEW DATAFRAME WITH ONLY THE COLUMNS NEEDED FOR THE GROUPING\ndf2 = df1[\n    [\n        \"ID\",\n        \"GOT\",\n        \"GPT\",\n        \"LDH\",\n        \"ALP\",\n        \"TP\",\n        \"ALB\",\n        \"UA\",\n        \"UN\",\n        \"CRE\",\n        \"T-BIL\",\n        \"T-CHO\",\n        \"TG\",\n        \"WBC\",\n        \"RBC\",\n        \"HGB\",\n        \"HCT\",\n        \"PLT\",\n        \"U-PRO\",\n        \"C3\",\n        \"C4\",\n        \"B/A_Tag\",\n    ]\n]\n\n\nGrouping the dataframe by ID and Before-After Tag and taking the mean of the values of each tests:\n\n\nCode\ndf3 = df2.groupby([\"ID\", \"B/A_Tag\"], as_index=False, dropna=True).mean()\n\n\n\n\n\nFinal Merge\nMerging the above dataset with our First Merge Dataset to get the final Data:\n\n\nCode\nfinal_df = pd.merge(df3, merge_df, on=[\"ID\"], how=\"left\")\nfinal_df.sort_values(by=[\"ID\"], inplace=True)\n# CONVERTING THE COLUMN NAMES TO SNAKECASE\nfinal_df.columns = final_df.columns.map(snakecase.convert)\n\n\nFinal Data Cleaning:\n\n\nCode\n# CREATING AGE BANDS FOR THE AGE COLUMN\nfor i in range(len(final_df)):\n    if final_df[\"age\"][i] == \"Not Available\":\n        pass\n    else:\n        if 0 <= final_df[\"age\"][i] <= 18:\n            final_df[\"age\"][i] = \"0-18\"\n        elif 19 <= final_df[\"age\"][i] <= 30:\n            final_df[\"age\"][i] = \"19-30\"\n        elif 31 <= final_df[\"age\"][i] <= 45:\n            final_df[\"age\"][i] = \"31-45\"\n        elif 46 <= final_df[\"age\"][i] <= 60:\n            final_df[\"age\"][i] = \"46-60\"\n        else:\n            final_df[\"age\"][i] = \"61+\"\n\n# CONVERTING ANA COLUMN TO NUMERIC\nfor i in range(len(final_df)):\n    final_df[\"ana\"][i] = re.sub(r\"[^\\d.]\", \"\", final_df[\"ana\"][i])\nfinal_df[\"ana\"] = pd.to_numeric(final_df[\"ana\"], errors=\"coerce\").astype(float)\n\n# CREATING A THROMBOSIS DIAGNOSIS COLUMN\nfinal_df[\"thrombosis_diagnosis\"] = final_df[\"thrombosis\"].apply(\n    lambda x: 1 if x > 0 else 0\n)\n\n# DROPPING UNNECESSARY COLUMNS\nfinal_df.drop([\"birthday\", \"examination _date\"], axis=1, inplace=True)\n\n# SAVING THE FINAL DATAFRAME TO A CSV FILE\nfinal_df.to_csv(\"data/FINAL_DATA.csv\", index=False)\n\n\nFinal Data Sample:\n\n\nCode\nfinal_df.head()\n\n\n\n\n\n\n  \n    \n      \n      id\n      b/a__tag\n      got\n      gpt\n      ldh\n      alp\n      tp\n      alb\n      ua\n      un\n      cre\n      t-bil\n      t-cho\n      tg\n      wbc\n      rbc\n      hgb\n      hct\n      plt\n      u-pro\n      c3\n      c4\n      a_cl _ig_g\n      a_cl _ig_m\n      ana\n      ana _pattern\n      a_cl _ig_a\n      symptoms\n      thrombosis\n      sex\n      diagnosis\n      age\n      thrombosis_diagnosis\n    \n  \n  \n    \n      0\n      14872.0\n      Before\n      20.872340\n      15.829787\n      119.255319\n      42.085106\n      5.378723\n      3.285106\n      2.889362\n      8.319149\n      0.568085\n      0.259574\n      135.829787\n      15.234043\n      6.855319\n      3.720851\n      10.578723\n      32.304255\n      144.680851\n      0.000000\n      0.000000\n      0.00\n      1.3\n      1.6\n      256.0\n      P\n      0.0\n      AMI\n      1\n      F\n      [mctd, ami]\n      31-45\n      1\n    \n    \n      1\n      48473.0\n      Before\n      38.036364\n      45.745455\n      111.818182\n      83.763636\n      6.103636\n      3.598182\n      1.765455\n      11.181818\n      0.667273\n      0.500000\n      126.290909\n      23.490909\n      7.478182\n      4.728727\n      10.689091\n      33.834545\n      111.236364\n      0.163636\n      0.000000\n      0.00\n      4.3\n      4.6\n      256.0\n      P,S\n      3.3\n      None\n      0\n      F\n      [sle]\n      31-45\n      0\n    \n    \n      2\n      102490.0\n      Before\n      23.885714\n      16.685714\n      134.628571\n      117.942857\n      7.271429\n      4.097143\n      4.694286\n      12.400000\n      0.814286\n      0.557143\n      147.200000\n      40.457143\n      6.594286\n      3.335429\n      10.271429\n      31.265714\n      232.714286\n      0.028571\n      0.000000\n      0.00\n      2.3\n      2.5\n      0.0\n      None\n      3.5\n      None\n      0\n      F\n      [pss]\n      0-18\n      0\n    \n    \n      3\n      108788.0\n      Before\n      13.256410\n      8.717949\n      68.410256\n      38.897436\n      4.620513\n      2.443590\n      2.687179\n      7.384615\n      0.458974\n      0.394872\n      86.230769\n      5.820513\n      3.269231\n      3.594103\n      10.894872\n      33.502564\n      175.025641\n      0.076923\n      0.000000\n      0.00\n      0.0\n      0.0\n      16.0\n      S\n      0.0\n      None\n      0\n      F\n      [sjs]\n      46-60\n      0\n    \n    \n      4\n      122405.0\n      Before\n      30.833333\n      22.950000\n      126.766667\n      69.966667\n      7.626667\n      3.616667\n      4.045000\n      11.800000\n      0.708333\n      0.391667\n      184.283333\n      8.100000\n      2.981667\n      3.795167\n      10.638333\n      33.691667\n      217.616667\n      0.000000\n      32.233333\n      6.45\n      0.0\n      4.0\n      4.0\n      P\n      0.0\n      None\n      0\n      F\n      [vertigo, sjs, sle]\n      31-45\n      0"
  },
  {
    "objectID": "index.html#preliminary-analysis",
    "href": "index.html#preliminary-analysis",
    "title": "EDA on Medical Data of Thrombosis Diagnosis",
    "section": "Preliminary Analysis",
    "text": "Preliminary Analysis\nInformation about the dataset features:\n\n\nCode\nfinal_df.info()\n\n\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 682 entries, 0 to 681\nData columns (total 33 columns):\n #   Column                Non-Null Count  Dtype  \n---  ------                --------------  -----  \n 0   id                    682 non-null    float64\n 1   b/a__tag              682 non-null    object \n 2   got                   682 non-null    float64\n 3   gpt                   682 non-null    float64\n 4   ldh                   682 non-null    float64\n 5   alp                   682 non-null    float64\n 6   tp                    682 non-null    float64\n 7   alb                   682 non-null    float64\n 8   ua                    682 non-null    float64\n 9   un                    682 non-null    float64\n 10  cre                   682 non-null    float64\n 11  t-bil                 682 non-null    float64\n 12  t-cho                 682 non-null    float64\n 13  tg                    682 non-null    float64\n 14  wbc                   682 non-null    float64\n 15  rbc                   682 non-null    float64\n 16  hgb                   682 non-null    float64\n 17  hct                   682 non-null    float64\n 18  plt                   682 non-null    float64\n 19  u-pro                 682 non-null    float64\n 20  c3                    682 non-null    float64\n 21  c4                    682 non-null    float64\n 22  a_cl _ig_g            682 non-null    float64\n 23  a_cl _ig_m            682 non-null    float64\n 24  ana                   682 non-null    float64\n 25  ana _pattern          682 non-null    object \n 26  a_cl _ig_a            682 non-null    float64\n 27  symptoms              682 non-null    object \n 28  thrombosis            682 non-null    int64  \n 29  sex                   682 non-null    object \n 30  diagnosis             682 non-null    object \n 31  age                   682 non-null    object \n 32  thrombosis_diagnosis  682 non-null    int64  \ndtypes: float64(25), int64(2), object(6)\nmemory usage: 176.0+ KB\n\n\nStatistical Analysis of the Dataset:\n\n\nCode\nfinal_df.describe()\n\n\n\n\n\n\n  \n    \n      \n      id\n      got\n      gpt\n      ldh\n      alp\n      tp\n      alb\n      ua\n      un\n      cre\n      t-bil\n      t-cho\n      tg\n      wbc\n      rbc\n      hgb\n      hct\n      plt\n      u-pro\n      c3\n      c4\n      a_cl _ig_g\n      a_cl _ig_m\n      ana\n      a_cl _ig_a\n      thrombosis\n      thrombosis_diagnosis\n    \n  \n  \n    \n      count\n      6.820000e+02\n      682.000000\n      682.000000\n      682.000000\n      682.000000\n      682.000000\n      682.000000\n      682.000000\n      682.000000\n      682.000000\n      682.000000\n      682.000000\n      682.000000\n      682.000000\n      682.000000\n      682.000000\n      682.000000\n      682.000000\n      682.000000\n      682.000000\n      682.000000\n      682.000000\n      682.000000\n      682.000000\n      682.000000\n      682.000000\n      682.000000\n    \n    \n      mean\n      4.701481e+06\n      25.554588\n      25.432193\n      348.515716\n      128.068644\n      6.288748\n      3.487965\n      3.632142\n      11.902266\n      0.545950\n      0.420021\n      148.807125\n      80.852254\n      6.463791\n      4.089160\n      12.100520\n      36.489660\n      224.730387\n      8.664434\n      49.893716\n      15.610479\n      16.571584\n      280.929619\n      478.392962\n      77.456452\n      0.199413\n      0.139296\n    \n    \n      std\n      1.369721e+06\n      29.433264\n      27.838277\n      204.129160\n      85.133350\n      1.476372\n      0.909155\n      1.331038\n      5.051944\n      0.237703\n      0.420512\n      57.803023\n      65.466995\n      2.810230\n      0.496685\n      1.524636\n      4.370481\n      85.121063\n      50.517087\n      26.652478\n      9.944405\n      109.647864\n      7165.056400\n      1095.472267\n      1858.855122\n      0.545815\n      0.346509\n    \n    \n      min\n      1.487200e+04\n      0.000000\n      0.000000\n      0.000000\n      0.000000\n      0.000000\n      0.000000\n      0.000000\n      0.000000\n      0.000000\n      0.000000\n      0.000000\n      0.000000\n      1.942857\n      2.090000\n      6.100000\n      18.150000\n      0.000000\n      0.000000\n      0.000000\n      0.000000\n      0.000000\n      0.000000\n      0.000000\n      0.000000\n      0.000000\n      0.000000\n    \n    \n      25%\n      4.537218e+06\n      15.255682\n      12.000000\n      254.836957\n      83.458766\n      5.696410\n      3.166250\n      2.807353\n      9.054924\n      0.425875\n      0.263356\n      116.139161\n      39.856456\n      4.483442\n      3.811571\n      11.300000\n      34.076639\n      173.307018\n      0.000000\n      33.000000\n      8.498464\n      0.000000\n      1.500000\n      4.000000\n      0.000000\n      0.000000\n      0.000000\n    \n    \n      50%\n      5.317729e+06\n      19.000000\n      17.000000\n      327.722222\n      113.061224\n      6.630128\n      3.693990\n      3.600000\n      11.313333\n      0.520000\n      0.355495\n      153.000000\n      70.200521\n      5.812500\n      4.124375\n      12.176562\n      36.732796\n      215.785714\n      0.000000\n      51.873016\n      15.000000\n      1.000000\n      2.200000\n      16.000000\n      1.800000\n      0.000000\n      0.000000\n    \n    \n      75%\n      5.555816e+06\n      25.232955\n      27.887821\n      409.270534\n      153.805978\n      7.200000\n      4.100000\n      4.323295\n      14.000000\n      0.618566\n      0.500000\n      187.967742\n      108.187500\n      7.778217\n      4.395000\n      13.189904\n      39.483462\n      263.503906\n      1.428571\n      67.080357\n      21.245192\n      2.000000\n      4.000000\n      256.000000\n      6.300000\n      0.000000\n      0.000000\n    \n    \n      max\n      5.779550e+06\n      422.500000\n      320.000000\n      3159.000000\n      940.500000\n      9.700000\n      5.000000\n      9.706218\n      60.264249\n      3.543161\n      8.635294\n      433.000000\n      569.000000\n      26.866667\n      5.687143\n      16.900000\n      49.685714\n      685.000000\n      1000.000000\n      154.500000\n      71.000000\n      1502.400000\n      187122.000000\n      4096.000000\n      48547.000000\n      3.000000\n      1.000000"
  },
  {
    "objectID": "index.html#visual-analysis",
    "href": "index.html#visual-analysis",
    "title": "EDA on Medical Data of Thrombosis Diagnosis",
    "section": "Visual Analysis",
    "text": "Visual Analysis\nDistribution of the Age of the Patients:\n\n\nCode\n# INITIALISING FIGURE AND AXES\nfig, ax = plt.subplots(figsize=(8, 5))\n# CREATING A COUNT PLOT\nsns.countplot(\n    x=\"age\", data=final_df, ax=ax, order=[\"0-18\", \"19-30\", \"31-45\", \"46-60\", \"61+\"]\n)\n\n# SETTING THE TITLE, X-AXIS LABEL, Y-AXIS LABEL AND TICKS SIZE\nax.set_title(\"Age Distribution of the Patients\", fontsize=15)\nax.set_xlabel(\"Age Bands\", fontsize=13)\nax.set_ylabel(\"Count\", fontsize=13)\nax.tick_params(labelsize=11)\n\n# SETTING THE GRID LINES AND BAR LABELS\nax.grid(True, axis=\"y\", linestyle=\":\", linewidth=1)\n_ = ax.bar_label(ax.containers[0])\n\nplt.show()\n\n\n\n\n\nMajority of the patients that tested for thrombosis were in the age range of 19-30 years. However, this does not mean that this age group is more likely to get diagnosed with Thrombosis than others. This just shows that the age group of 19-30 years is the most common age group in the dataset and were tested for thrombosis the most number of times.\nThe Distribution of the number of people who were diagnosed with Thrombosis along with those who were not:\n\n\nCode\n# INITIALISING FIGURE AND AXES\nfig, ax = plt.subplots(figsize=(8, 5))\n\n# CREATING A BAR PLOT\nsns.barplot(\n    x=final_df[\"thrombosis_diagnosis\"].value_counts().index,\n    y=final_df[\"thrombosis_diagnosis\"].value_counts().values,\n    ax=ax,\n)\n\n# SETTING THE TITLE, X-AXIS LABEL, Y-AXIS LABEL AND TICKS SIZE\nax.set_title(\"Distribution of Positive and Negative Thrombosis Patients\", fontsize=15)\nax.set_xlabel(\"Diagnosis\", fontsize=13)\nax.set_ylabel(\"Count\", fontsize=13)\nax.tick_params(labelsize=11)\n_ = ax.set_xticklabels([\"Negative\", \"Positive\"])\n\n# SETTING THE GRID LINES AND BAR LABELS\nax.grid(True, axis=\"y\", linestyle=\":\", linewidth=1)\n_ = ax.bar_label(ax.containers[0])\n\nplt.show()\n\n\n\n\n\nOnly 16% of the patients who went for the Thrombosis Test were diagnosed Positive.\nOutlier Detection of all the features present in the Dataset:\n\n\nCode\n# DIVIDING THE COLUMNS INTO GROUPS\ncols1 = [\"got\", \"gpt\", \"ldh\", \"alp\", \"tp\", \"alb\"]\ncols2 = [\"ua\", \"un\", \"cre\", \"t-bil\", \"t-cho\", \"tg\", \"u-pro\"]\ncols3 = [\"wbc\", \"rbc\", \"hgb\", \"hct\", \"plt\", \"c3\", \"c4\"]\ncols4 = [\"a_cl _ig_g\", \"a_cl _ig_m\", \"ana\", \"a_cl _ig_a\"]\n\n# INITIALISING FIGURE AND AXES\nfig, ax = plt.subplots(2, 2, figsize=(10, 10))\n\n# CREATING A BOXPLOT FOR EACH GROUP\nsns.boxplot(data=final_df[cols1], ax=ax[0, 0])\nsns.boxplot(data=final_df[cols2], ax=ax[0, 1])\nsns.boxplot(data=final_df[cols3], ax=ax[1, 0])\nsns.boxplot(data=final_df[cols4], ax=ax[1, 1])\n\n# SETTING THE TITLE\nplt.suptitle(\"Outlier Detection of the Features\", fontsize=16, y=0.94)\nax[0, 0].set_title(\"Blood Chemistry\", fontsize=14)\nax[0, 1].set_title(\"Urinalysis\", fontsize=14)\nax[1, 0].set_title(\"Complete Blood Count\", fontsize=14)\nax[1, 1].set_title(\"Immunology\", fontsize=14)\n\n# SETTING THE TICKSIZE AND GRID LINES\nfor i in range(2):\n    for j in range(2):\n        ax[i, j].tick_params(labelsize=11)\n        ax[i, j].grid(True, axis=\"y\", linestyle=\":\", linewidth=1)\n\nplt.show()\n\n\n\n\n\nSome features like “u-pro (Proteinuria)”, “ldh (Lactate Dehydrogenase)” and “plt (Platelet) have a lot of outliers present while features like”acl_igA” and “acl_igM” have less number of outliers but it is a very large value which needs to be dealt with.\nDistribution of Diagnosis of Thrombosis with respect to the gender of the patient:\n\n\nCode\n# CREATING A NEW DATAFRAME FOR GENDER PRECENT DISTRIBUTION\nx, y = \"sex\", \"thrombosis_diagnosis\"\nnew = final_df[final_df[x] != \"Not Available\"]\nnew = new.groupby(x)[y].value_counts(normalize=True)\nnew = new.mul(100)\nnew = new.rename(\"Percent\").reset_index()\nnew[\"thrombosis_diagnosis\"] = new[\"thrombosis_diagnosis\"].apply(\n    lambda x: \"Thrombosis\" if x > 0 else \"No Thrombosis\"\n)\n\n# INITIALISING FIGURE AND AXES\nfig, ax = plt.subplots(figsize=(8, 5))\n\n# CREATING A BAR PLOT\nsns.barplot(x=\"sex\", y=\"Percent\", hue=\"thrombosis_diagnosis\", data=new, ax=ax)\n\n# SETTING THE TITLE, X-AXIS LABEL, Y-AXIS LABEL AND TICKS SIZE\nax.set_ylim(0, 100)\nax.set_title(\n    \"Thrombosis Diagnosis Distribution w.r.t Gender of the Patient\", fontsize=15\n)\nax.set_xlabel(\"Gender\", fontsize=13)\nax.set_ylabel(\"Percent\", fontsize=13)\nax.tick_params(labelsize=11)\nax.set_xticklabels([\"Female\", \"Male\"])\n\n# SETTING THE GRID LINES, LEGEND AND BAR LABELS\nax.grid(True, axis=\"y\", linestyle=\":\", linewidth=1)\nax.legend(title=\"Diagnosis\", title_fontsize=11, fontsize=10, loc=\"upper right\")\nfor p in ax.patches:\n    txt = str(p.get_height().round(2)) + \"%\"\n    txt_x = p.get_x()\n    txt_y = p.get_height()\n    ax.text(txt_x + 0.1, txt_y, txt, va=\"bottom\", fontsize=11)\n\nplt.savefig(\"plot_outputs/plot-01.png\")\nplt.show()\n\n\n\n\n\nFrom the above graph it is evident that Females are more likely to test positive for Thrombosis as compared to Males. But these reports are from just one hospital and this observation cannot be generalized for the entire world. To make that generalization we would need more information about the Demographics of the area where the University is located and to what extent have those factors affected the patients.\nDistribution of the severity of Thrombosis among different Age groups:\n\n\nCode\n# INITIALISING FIGURE AND AXES\nfig, ax = plt.subplots(figsize=(8, 5))\n\n# CREATING A COUNT PLOT\nsns.countplot(\n    x=final_df[\"thrombosis\"][final_df[\"thrombosis\"] > 0],\n    ax=ax,\n    hue=final_df[\"age\"],\n    hue_order=[\"0-18\", \"19-30\", \"31-45\", \"46-60\", \"61+\"],\n)\n\n# SETTING THE TITLE, X-AXIS LABEL, Y-AXIS LABEL AND TICKS SIZE\nplt.suptitle(\"Distribution of Degrees of Thrombosis w.r.t Age Bands\", fontsize=15)\nax.set_title(\n    \"1 = Positive | 2 = Positive and very severe | 3 = Positive and extremely severe\",\n    fontsize=11,\n)\nax.set_xlabel(\"Thrombosis\", fontsize=13)\nax.set_ylabel(\"Count\", fontsize=13)\nax.tick_params(labelsize=11)\nax.set_yticks(np.arange(0, 21, 5))\n\n# SETTING THE GRID LINES, LEGEND AND BAR LABELS\nax.grid(True, axis=\"y\", linestyle=\":\", linewidth=1)\nfor container in ax.containers:\n    _ = ax.bar_label(container)\nax.legend(title=\"Age Bands\", title_fontsize=11, fontsize=10)\n\nplt.savefig(\"plot_outputs/plot-02.png\")\nplt.show()\n\n\n\n\n\nThere are a lot of patients for Mild Thrombosis in all age bands as compared to other Degrees of Thrombosis, but Patients from the age of 19 to 45 have the highest probability of getting diagnosed with Mild Thrombosis. This pattern changes for Severe Thrombosis where patients who are not adults yet (0-18 years) are most likely to get diagnosed with Severe Thrombosis. And finally, patients in the age group of 31-60 get diagnosed with Extremely Severe Thrombosis. It can be inferred from this data that people of age 61 and above are least likely to get diagnosed with Thrombosis.\nPredictors that are correlated to Thrombosis (target variable):\n\n\nCode\n# CREATING A CORRELATION MATRIX\ncorr_df = final_df.drop([\"id\", \"thrombosis_diagnosis\"], axis=1)\n\n# CREATING A CORRELATION PLOT\ncorr = corr_df.corr()\ncorr[\"thrombosis\"].sort_values(ascending=False)\n\n# SETTING THE FIGURE SIZE\nplt.figure(figsize=(8, 5))\n\n# CREATING A BAR PLOT BASED ON THE CORRELATION COEFFICIENTS\ncorr[\"thrombosis\"].sort_values(ascending=False).plot(kind=\"bar\")\n\n# SETTING THE TITLE, X-AXIS LABEL, Y-AXIS LABEL AND TICKS SIZE\nplt.title(\"Correlation between Thrombosis and other Variables\", fontsize=15)\nplt.grid(True, axis=\"y\", linestyle=\":\", linewidth=1)\nplt.ylabel(\"Correlation Coefficient\", fontsize=13)\nplt.xlabel(\"Variables\", fontsize=13)\nplt.tick_params(labelsize=11)\n\nplt.savefig(\"plot_outputs/plot-03.png\")\nplt.show()\n\n\n\n\n\nFeatures that are highly correlated to Thrombosis (target variable) are:  - acl_igG (Anticardiolipin Antibody IgG) - ANA (Antinuclear Antibody) - U-Pro (Proteinuria) - GPT (ALT glutamic pylvic transaminase) - GOT (AST glutamic oxaloacetic transaminase) - C3 (Complement 3) - C4 (Complement 4) - RBC (Red Blood Cells) - HCT (Hematoclit) - PLT (Platelet) - HGB (Hemoglobin)"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  }
]